{"version":3,"sources":["webpack:///./src/api/aliload/index.js","webpack:///./src/api/spark/index.js","webpack:///./src/pages/history/index.vue?062d","webpack:///src/pages/history/index.vue","webpack:///./src/pages/history/index.vue?a7cc","webpack:///./src/pages/history/index.vue","webpack:///./src/api/taskopt/index.js","webpack:///./src/api/hdfs/index.js","webpack:///./src/api/bigroot/index.js"],"names":["__webpack_require__","d","__webpack_exports__","getAliLoadStatus","getaTaskList","deleteAliloadTask","_plugin_axios__WEBPACK_IMPORTED_MODULE_0__","data","request","url","method","params","getTaskTimeline","getStraggler","getCartTree","getsTaskList","deleteSparkTask","render","_vm","this","_h","$createElement","_c","_self","slot","_v","staticStyle","margin","attrs","bigroot","height","border","type","prop","label","scopedSlots","_u","key","fn","scope","size","on","click","$event","lookBigRootReport","$index","row","handleBigRootDelete","width","spark","lookSparkReport","handleSparkDelete","astracer","fixed","disabled","status","refreshHDFSStatus","lookHDFSReport","handleHDFSDelete","aliload","lookAliloadReport","handleAliloadDelete","taskopt","lookTaskOptReport","handleTaskOptDelete","staticRenderFns","historyvue_type_script_lang_js_","name","created","_this","Object","hdfs","then","res","methods","index","$store","commit","$router","push","_this2","splice","_this3","_this4","_this5","_this6","_this7","pages_historyvue_type_script_lang_js_","component","componentNormalizer","options","__file","getTaskOptStatus","gettTaskOptList","deleteTaskOpt","getCallTree","getFuncFeature","getTimeLine","createTask","gethTaskList","refreshBenchStatus","deleteHDFSTask","getTraceDetail","getBigRootStraggler","getbTaskList","deleteBigRootTask"],"mappings":"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","file":"static/js/chunk-7a1cd2b1.a42e4498.js","sourcesContent":["import request from \"@/plugin/axios\"\n\nexport function getAliLoadStatus(data){\n    return request({\n        url: '/aliload/getstatus',\n        method: 'GET',\n        params: data\n    })\n}\n\nexport function getaTaskList() {\n    return request({\n        url: \"/aliload/gettasklist\",\n        method: 'GET',\n    })\n}\n\nexport function deleteAliloadTask(data) {\n    return request({\n        url: \"/aliload/delete\",\n        method: 'GET',\n        params: data\n    })\n}","import request from \"@/plugin/axios\"\n\nexport function getTaskTimeline(data) {\n    return request({\n        url: '/spark/timeline',\n        method: 'GET',\n        params: data\n    })\n}\n\nexport function getStraggler(data) {\n    return request({\n        url: '/spark/straggler',\n        method: 'GET',\n        params: data\n    })\n}\n\nexport  function getCartTree(data) {\n    return request({\n        url: '/spark/cart_tree',\n        method: 'GET',\n        params: data\n    })\n}\n\nexport function getsTaskList() {\n    return request({\n        url: '/spark/gettasklist',\n        method: 'GET'\n    })\n}\n\nexport function deleteSparkTask(data) {\n    return request({\n        url: \"/spark/delete\",\n        method: 'GET',\n        params: data\n    })\n}","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('d2-container',[_c('template',{slot:\"header\"},[_vm._v(\"任务清单\")]),_c('div',{staticStyle:{\"margin\":\"1% 2%\"}},[_c('h3',[_vm._v(\"BigRoot\")]),_c('el-table',{attrs:{\"data\":_vm.bigroot,\"height\":\"250\",\"border\":\"\"}},[_c('el-table-column',{attrs:{\"type\":\"index\"}}),_c('el-table-column',{attrs:{\"prop\":\"time\",\"label\":\"日期\"}}),_c('el-table-column',{attrs:{\"prop\":\"name\",\"label\":\"任务名称\"}}),_c('el-table-column',{attrs:{\"prop\":\"desc\",\"label\":\"任务描述\"}}),_c('el-table-column',{attrs:{\"prop\":\"status\",\"label\":\"任务状态\"}}),_c('el-table-column',{attrs:{\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"size\":\"mini\"},on:{\"click\":function($event){_vm.lookBigRootReport(scope.$index, scope.row)}}},[_vm._v(\"查看\")]),_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"danger\"},on:{\"click\":function($event){_vm.handleBigRootDelete(scope.$index, scope.row)}}},[_vm._v(\"删除\")])]}}])})],1),_c('h3',[_vm._v(\"Spark List\")]),_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.spark,\"height\":\"250\",\"border\":\"\"}},[_c('el-table-column',{attrs:{\"type\":\"index\"}}),_c('el-table-column',{attrs:{\"prop\":\"time\",\"label\":\"日期\"}}),_c('el-table-column',{attrs:{\"prop\":\"name\",\"label\":\"任务名称\"}}),_c('el-table-column',{attrs:{\"prop\":\"desc\",\"label\":\"任务描述\"}}),_c('el-table-column',{attrs:{\"prop\":\"status\",\"label\":\"任务状态\"}}),_c('el-table-column',{attrs:{\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"size\":\"mini\"},on:{\"click\":function($event){_vm.lookSparkReport(scope.$index, scope.row)}}},[_vm._v(\"查看\")]),_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"danger\"},on:{\"click\":function($event){_vm.handleSparkDelete(scope.$index, scope.row)}}},[_vm._v(\"删除\")])]}}])})],1),_c('h3',[_vm._v(\"ASTracer List\")]),_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.astracer,\"height\":\"270\",\"border\":\"\"}},[_c('el-table-column',{attrs:{\"type\":\"index\"}}),_c('el-table-column',{attrs:{\"prop\":\"time\",\"label\":\"日期\"}}),_c('el-table-column',{attrs:{\"prop\":\"name\",\"label\":\"任务名称\"}}),_c('el-table-column',{attrs:{\"prop\":\"sampler\",\"label\":\"采样器类型\"}}),_c('el-table-column',{attrs:{\"prop\":\"desc\",\"label\":\"任务描述\"}}),_c('el-table-column',{attrs:{\"prop\":\"status\",\"label\":\"任务状态\"}}),_c('el-table-column',{attrs:{\"label\":\"操作\",\"fixed\":\"right\",\"width\":\"250\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"primary\",\"disabled\":scope.row.status==='finshed'},on:{\"click\":function($event){_vm.refreshHDFSStatus(scope.$index, scope.row)}}},[_vm._v(\"刷新状态\")]),_c('el-button',{attrs:{\"size\":\"mini\"},on:{\"click\":function($event){_vm.lookHDFSReport(scope.$index, scope.row)}}},[_vm._v(\"查看\")]),_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"danger\"},on:{\"click\":function($event){_vm.handleHDFSDelete(scope.$index, scope.row)}}},[_vm._v(\"删除\")])]}}])})],1),_c('h3',[_vm._v(\"ALiload List\")]),_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.aliload,\"height\":\"250\",\"border\":\"\"}},[_c('el-table-column',{attrs:{\"type\":\"index\"}}),_c('el-table-column',{attrs:{\"prop\":\"time\",\"label\":\"日期\"}}),_c('el-table-column',{attrs:{\"prop\":\"rate\",\"label\":\"读写速率\"}}),_c('el-table-column',{attrs:{\"prop\":\"start\",\"label\":\"开始时间\"}}),_c('el-table-column',{attrs:{\"prop\":\"end\",\"label\":\"结束时间\"}}),_c('el-table-column',{attrs:{\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"size\":\"mini\"},on:{\"click\":function($event){_vm.lookAliloadReport(scope.$index, scope.row)}}},[_vm._v(\"查看\")]),_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"danger\"},on:{\"click\":function($event){_vm.handleAliloadDelete(scope.$index, scope.row)}}},[_vm._v(\"删除\")])]}}])})],1),_c('h3',[_vm._v(\"Parameter Optimization Task List\")]),_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.taskopt,\"height\":\"250\",\"border\":\"\"}},[_c('el-table-column',{attrs:{\"type\":\"index\"}}),_c('el-table-column',{attrs:{\"prop\":\"time\",\"label\":\"日期\"}}),_c('el-table-column',{attrs:{\"prop\":\"name\",\"label\":\"任务名称\"}}),_c('el-table-column',{attrs:{\"prop\":\"class\",\"label\":\"java类\"}}),_c('el-table-column',{attrs:{\"prop\":\"model\",\"label\":\"模型\"}}),_c('el-table-column',{attrs:{\"prop\":\"train_time\",\"label\":\"训练次数\"}}),_c('el-table-column',{attrs:{\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"size\":\"mini\"},on:{\"click\":function($event){_vm.lookTaskOptReport(scope.$index, scope.row)}}},[_vm._v(\"查看\")]),_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"danger\"},on:{\"click\":function($event){_vm.handleTaskOptDelete(scope.$index, scope.row)}}},[_vm._v(\"删除\")])]}}])})],1)],1)],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <d2-container>\n        <template slot=\"header\">任务清单</template>\n        <div style=\"margin: 1% 2%\">\n          <h3>BigRoot</h3>\n          <el-table :data=\"bigroot\" height=\"250\" border>\n            <el-table-column type=\"index\">\n            </el-table-column>\n            <el-table-column prop=\"time\" label=\"日期\">\n            </el-table-column>\n            <el-table-column prop=\"name\" label=\"任务名称\">\n            </el-table-column>\n            <el-table-column prop=\"desc\" label=\"任务描述\">\n            </el-table-column>\n            <el-table-column prop=\"status\" label=\"任务状态\">\n            </el-table-column>\n            <el-table-column label=\"操作\">\n              <template slot-scope=\"scope\">\n                <el-button\n                  size=\"mini\"\n                  @click=\"lookBigRootReport(scope.$index, scope.row)\">查看</el-button>\n                <el-button\n                  size=\"mini\"\n                  type=\"danger\"\n                  @click=\"handleBigRootDelete(scope.$index, scope.row)\">删除</el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n          <h3>Spark List</h3>\n          <el-table :data=\"spark\" height=\"250\" border style=\"width: 100%\">\n            <el-table-column type=\"index\">\n            </el-table-column>\n            <el-table-column prop=\"time\" label=\"日期\">\n            </el-table-column>\n            <el-table-column prop=\"name\" label=\"任务名称\">\n            </el-table-column>\n            <el-table-column prop=\"desc\" label=\"任务描述\">\n            </el-table-column>\n            <el-table-column prop=\"status\" label=\"任务状态\">\n            </el-table-column>\n            <el-table-column label=\"操作\">\n              <template slot-scope=\"scope\">\n                <el-button\n                  size=\"mini\"\n                  @click=\"lookSparkReport(scope.$index, scope.row)\">查看</el-button>\n                <el-button\n                  size=\"mini\"\n                  type=\"danger\"\n                  @click=\"handleSparkDelete(scope.$index, scope.row)\">删除</el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n          <h3>ASTracer List</h3>\n          <el-table :data=\"astracer\" height=\"270\" border style=\"width: 100%\">\n            <el-table-column type=\"index\">\n            </el-table-column>\n            <el-table-column prop=\"time\" label=\"日期\">\n            </el-table-column>\n            <el-table-column prop=\"name\" label=\"任务名称\">\n            </el-table-column>\n            <el-table-column prop=\"sampler\" label=\"采样器类型\">\n            </el-table-column>\n            <el-table-column prop=\"desc\" label=\"任务描述\">\n            </el-table-column>\n            <el-table-column prop=\"status\" label=\"任务状态\">\n            </el-table-column>\n            <el-table-column label=\"操作\" fixed=\"right\" width=\"250\">\n              <template slot-scope=\"scope\">\n                <el-button\n                  size=\"mini\"\n                  type=\"primary\"\n                  :disabled=\"scope.row.status==='finshed'\"\n                  @click=\"refreshHDFSStatus(scope.$index, scope.row)\">刷新状态</el-button>\n                <el-button\n                  size=\"mini\"\n                  @click=\"lookHDFSReport(scope.$index, scope.row)\">查看</el-button>\n                <el-button\n                  size=\"mini\"\n                  type=\"danger\"\n                  @click=\"handleHDFSDelete(scope.$index, scope.row)\">删除</el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n          <h3>ALiload List</h3>\n          <el-table :data=\"aliload\" height=\"250\" border style=\"width: 100%\">\n            <el-table-column type=\"index\">\n            </el-table-column>\n            <el-table-column prop=\"time\" label=\"日期\">\n            </el-table-column>\n            <el-table-column prop=\"rate\" label=\"读写速率\">\n            </el-table-column>\n            <el-table-column prop=\"start\" label=\"开始时间\">\n            </el-table-column>\n            <el-table-column prop=\"end\" label=\"结束时间\">\n            </el-table-column>\n            <el-table-column label=\"操作\">\n              <template slot-scope=\"scope\">\n                <el-button\n                  size=\"mini\"\n                  @click=\"lookAliloadReport(scope.$index, scope.row)\">查看</el-button>\n                <el-button\n                  size=\"mini\"\n                  type=\"danger\"\n                  @click=\"handleAliloadDelete(scope.$index, scope.row)\">删除</el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n          <h3>Parameter Optimization Task List</h3>\n          <el-table :data=\"taskopt\" height=\"250\" border style=\"width: 100%\">\n            <el-table-column type=\"index\">\n            </el-table-column>\n            <el-table-column prop=\"time\" label=\"日期\">\n            </el-table-column>\n            <el-table-column prop=\"name\" label=\"任务名称\">\n            </el-table-column>\n            <el-table-column prop=\"class\" label=\"java类\">\n            </el-table-column>\n            <el-table-column prop=\"model\" label=\"模型\">\n            </el-table-column>\n            <el-table-column prop=\"train_time\" label=\"训练次数\">\n            </el-table-column>\n            <el-table-column label=\"操作\">\n              <template slot-scope=\"scope\">\n                <el-button\n                  size=\"mini\"\n                  @click=\"lookTaskOptReport(scope.$index, scope.row)\">查看</el-button>\n                <el-button\n                  size=\"mini\"\n                  type=\"danger\"\n                  @click=\"handleTaskOptDelete(scope.$index, scope.row)\">删除</el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n        </div>\n    </d2-container>\n</template>\n\n<script>\n    import {gethTaskList, refreshBenchStatus, deleteHDFSTask} from \"@/api/hdfs\";\n    import {getsTaskList, deleteSparkTask} from \"@/api/spark\";\n    import {getbTaskList, deleteBigRootTask} from \"@/api/bigroot\";\n    import {getaTaskList, deleteAliloadTask} from \"@/api/aliload\";\n    import {gettTaskOptList, deleteTaskOpt} from \"@/api/taskopt\";\n\n    export default {\n        name: \"history\",\n        created(){\n          gethTaskList().then(res => {\n              this.astracer = res.data\n          });\n          getsTaskList().then(res => {\n              this.spark = res.data\n          });\n          getbTaskList().then(res => {\n              this.bigroot = res.data\n          });\n          getaTaskList().then(res=>{\n              this.aliload = res.data\n          });\n          gettTaskOptList().then(res=>{\n              this.taskopt = res.data\n          })\n        },\n        data(){\n            return{\n                astracer: null,\n                spark: null,\n                bigroot: null,\n                aliload: null,\n                taskopt: null,\n            }\n        },\n        methods: {\n            // BigRoot相关操作\n            lookBigRootReport(index, row){\n              this.$store.commit('bigroot/setCurrentTaskName', row.name);\n              this.$router.push({name: 'bigroot-report'})\n            },\n            handleBigRootDelete(index, row){\n                deleteBigRootTask({name: row.name}).then(res => {\n                  if (res.status === 0){\n                    this.bigroot.splice(index, 1);\n                  }\n                })\n            },\n\n            // Spark相关操作\n            lookSparkReport(index, row){\n              this.$store.commit('spark/setCurrentTaskName', row.name);\n              this.$router.push({name: 'spark-report'})\n            },\n            handleSparkDelete(index, row){\n                deleteSparkTask({name: row.name}).then(res => {\n                  if (res.status === 0){\n                    this.spark.splice(index, 1);\n                  }\n                })\n            },\n\n            // ASTracer 相关操作\n            refreshHDFSStatus(index, row){\n                refreshBenchStatus({name: row.name}).then(res =>{\n                  if(res.status === 1){\n                    this.astracer[index].status = \"finished\"\n                  }\n                })\n            },\n            lookHDFSReport(index, row) {\n              this.$store.commit('hdfs/setCurrentTaskName', row.name);\n              this.$router.push({name: \"hdfs-report\"})\n            },\n            handleHDFSDelete(index, row) {\n                deleteHDFSTask({name: row.name}).then(res => {\n                  if (res.status === 0){\n                    this.astracer.splice(index, 1);\n                  }\n                })\n            },\n\n            // Aliload相关操作\n            lookAliloadReport(index, row){\n              this.$store.commit('aliload/setCurrentTaskName', row.name);\n              this.$router.push({name: 'aliload'})\n            },\n            handleAliloadDelete(index, row){\n                deleteAliloadTask({name: row.name}).then(res => {\n                  if (res.status === 0){\n                    this.aliload.splice(index, 1);\n                  }\n                })\n            },\n\n            // TaskOpt相关操作\n            lookTaskOptReport(index, row) {\n              this.$store.commit('taskopt/setCurrentTaskName', row.name);\n              this.$router.push({name: 'taskopt'})\n            },\n            handleTaskOptDelete(index, row){\n              deleteTaskOpt({name: row.name}).then(res=>{\n                if(res.status == 0) {\n                  this.taskopt.splice(index, 1);\n                }\n              })\n            },\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=5bfea720&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5bfea720\",\n  null\n  \n)\n\ncomponent.options.__file = \"index.vue\"\nexport default component.exports","import request from \"@/plugin/axios\"\n\nexport function getTaskOptStatus(data){\n    return request({\n        url: '/taskopt/getstatus',\n        method: 'GET',\n        params: data\n    })\n}\n\nexport function gettTaskOptList() {\n    return request({\n        url: \"/taskopt/gettasklist\",\n        method: 'GET',\n    })\n}\n\nexport function deleteTaskOpt(data) {\n    return request({\n        url: \"/taskopt/delete\",\n        method: 'GET',\n        params: data\n    })\n}","import request from \"@/plugin/axios\"\n\nexport function getCallTree(data) {\n    return request({\n        url: '/hdfs/getcalltree',\n        method: 'GET',\n        params: data\n    })\n}\n\nexport function getFuncFeature(data) {\n    return request({\n        url: '/hdfs/getfuncfeature',\n        method: 'GET',\n        params: data\n    })\n}\n\nexport function getTimeLine(data) {\n    return request({\n        url: '/hdfs/gettimeline',\n        method: 'GET',\n        params: data\n    })\n}\n\nexport function createTask(data) {\n    return request({\n        url: '/hdfs/createtask',\n        method: 'GET',\n        params: data\n    })\n}\n\nexport function gethTaskList() {\n    return request({\n        url:\"/hdfs/gettasklist\",\n        method: \"GET\"\n    })\n}\n\nexport function refreshBenchStatus(data) {\n    return request({\n        url: \"/hdfs/refresh\",\n        method: \"GET\",\n        params: data\n    })\n}\n\nexport function deleteHDFSTask(data) {\n    return request({\n        url: \"/hdfs/delete\",\n        method: \"GET\",\n        params: data\n    })\n}\n\nexport function getTraceDetail(data) {\n    return request({\n        url: \"/hdfs/gettracedetail\",\n        method: \"GET\",\n        params: data\n    })\n}","import request from \"@/plugin/axios\"\n\nexport function getBigRootStraggler(data){\n    return request({\n        url: '/bigroot/getstraggler',\n        method: 'GET',\n        params: data\n    })\n}\n\nexport function getbTaskList(data) {\n    return request({\n        url: \"/bigroot/gettasklist\",\n        method: 'GET',\n        params: data\n    })\n}\n\nexport function deleteBigRootTask(data) {\n    return request({\n        url: \"/bigroot/delete\",\n        method: 'GET',\n        params: data\n    })\n}"],"sourceRoot":""}