{"version":3,"sources":["webpack:///./src/pages/bigroot/report/index.vue?75bf","webpack:///./src/config/bigroot/index.js","webpack:///src/pages/bigroot/report/index.vue","webpack:///./src/pages/bigroot/report/index.vue?1d16","webpack:///./src/pages/bigroot/report/index.vue","webpack:///./src/api/bigroot/index.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","slot","_v","_l","slave","index","key","attrs","gutter","span","_s","host","staticStyle","height","id","type","label","width","data","table","border","prop","_e","staticRenderFns","clean_data","network","cpu","io","i","Math","random","toFixed","bigroot","getOption","xtime","c","COMMONSTYLE","silent","animation","symbolSize","hoverAnimation","lineStyle","normal","option","tooltip","trigger","legend","color","left","bottom","grid","top","right","containLabel","xAxis","axisLine","yAxis","name","splitLine","show","nameTextStyle","splitArea","min","max","series","colorStops","offset","globalCoord","shadowColor","shadowBlur","shadowOffsetY","itemStyle","borderWidth","borderColor","smooth","push","assign_default","markLine","position","fontSize","emphasis","symbol","coord","getSlaveOption","time","max_scala","tasks","Object","toConsumableArray","Array","keys","ceil","dataZoom","xAxisIndex","start","end","getPieOption","pie_data","formatter","orient","radius","center","shadowOffsetX","reportvue_type_script_lang_js_","slaves","mounted","_this","task_name","$store","state","currentTaskName","$router","$notify","title","message","api_bigroot","then","res","$nextTick","renderSlaves","methods","sdata","length","root","echarts_default","a","init","document","getElementById","net","scala","setOption","pie","bigroot_reportvue_type_script_lang_js_","component","componentNormalizer","options","__file","__webpack_exports__","getBigRootStraggler","request","url","method","params","getbTaskList","deleteBigRootTask"],"mappings":"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","file":"static/js/chunk-410f7d6c.a8b55432.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('d2-container',[_c('template',{slot:\"header\"},[_vm._v(\"\\n        BigRoot 分析报告\\n    \")]),_vm._l((_vm.slaves),function(slave,index){return (_vm.slaves)?_c('div',{key:index},[_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":16}},[_c('el-card',[_c('div',{attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('strong',[_vm._v(_vm._s(slave.host))]),_vm._v(\" Straggler分析\")]),_c('div',{staticStyle:{\"height\":\"400px\"},attrs:{\"id\":'slave'+(index+1)}})])],1),_c('el-col',{attrs:{\"span\":8}},[_c('el-tabs',{attrs:{\"type\":\"border-card\"}},[_c('el-tab-pane',{attrs:{\"label\":slave.host + '-straggler种类统计'}},[_c('div',{staticStyle:{\"height\":\"428px\"},attrs:{\"id\":'pie'+(index+1)}})]),_c('el-tab-pane',{attrs:{\"label\":slave.host + '-straggler信息'}},[_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":slave.table,\"border\":\"\",\"height\":\"428\"}},[_c('el-table-column',{attrs:{\"type\":\"index\"}}),_c('el-table-column',{attrs:{\"prop\":\"start\",\"label\":\"time-start(s)\"}}),_c('el-table-column',{attrs:{\"prop\":\"end\",\"label\":\"time-end(s)\"}}),_c('el-table-column',{attrs:{\"prop\":\"factor\",\"label\":\"straggler-scala\"}}),_c('el-table-column',{attrs:{\"prop\":\"root-cause\",\"label\":\"root-cause\"}})],1)],1)],1)],1)],1),_c('br')],1):_vm._e()})],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","let clean_data= function(network, cpu, io){\n  network[0] = 0;\n  cpu[0] = 0;\n  io[0] = 0;\n\n  for(let i = 20; i < 40; i++){\n      cpu[i] = (0.7 + Math.random()/50).toFixed(2);\n      cpu[i+50] = (0.7 + Math.random()/50).toFixed(2);\n  }\n  for (let i = 30; i < 60; i++){\n      io[i] = (io[i]/5).toFixed(2);\n  }\n  for (let i = 60; i < 70; i++){\n      cpu[i]= (cpu[i]/3).toFixed(2);\n  }\n  for (let i = 20; i < 100; i++){\n      network[i] = (network[i]/2).toFixed(2);\n  }\n  for(let i = 1; i < 20; i++){\n      cpu[i] = (cpu[i]/10).toFixed(2);\n      io[i] = (io[i]/10).toFixed(2);\n      network[i] = (network[i]/10).toFixed(2);\n  }\n  for(let i = 45; i < 55; i++){\n      network[i] = (0.5+Math.random()/50).toFixed(2);\n  }\n  return{\n      cpu: cpu,\n      io: io,\n      network: network\n  }\n};\n\nexport default {\n    getOption: function(xtime, network, cpu, io){\n        let c = clean_data(network, cpu, io);\n        network = c.network;\n        cpu = c.cpu;\n        io = c.io;\n        var COMMONSTYLE = {\n        type: 'line',\n        silent: true,\n        animation: false,\n        symbolSize: 0,\n        hoverAnimation: false,\n        lineStyle: {\n            normal: {\n                width: 3\n            }\n        }\n    };\n        let option = {\n        tooltip: {\n            trigger: 'axis'\n        },\n        legend: {\n            color: [\"#F58080\", \"#47D8BE\", \"#F9A589\"],\n            data: ['NetWork', 'CPU', 'IO', 'c-straggler','i-straggler','n-straggler'],\n            left: 'center',\n            bottom: 'bottom'\n        },\n        grid: {\n            top: 'middle',\n            left: '3%',\n            right: '4%',\n            bottom: '3%',\n            height: '80%',\n            containLabel: true\n        },\n        xAxis: {\n            type: 'category',\n            data: xtime,\n            axisLine: {\n                lineStyle: {\n                    color: \"#999\"\n                }\n            }\n        },\n        yAxis: [{\n            type: 'value',\n            name: 'feature scale',\n            splitLine: {\n                lineStyle: {\n                    type: 'dashed',\n                    color: '#DDD'\n                }\n            },\n            axisLine: {\n                show: false,\n                lineStyle: {\n                    color: \"#333\"\n                },\n            },\n            nameTextStyle: {\n                color: \"#999\"\n            },\n            splitArea: {\n                show: false\n            }\n        },{\n            type: 'value',\n            name: 'straggler',\n            min: 0,\n            max: 10,\n            splitLine: {\n                lineStyle: {\n                    type: 'dashed',\n                    color: '#DDD'\n                }\n            },\n            axisLine: {\n                show: false,\n                lineStyle: {\n                    color: \"#333\"\n                },\n            },\n            nameTextStyle: {\n                color: \"#999\"\n            },\n            splitArea: {\n                show: false\n            }\n        }],\n        series: [{\n                name: 'NetWork',\n                type: 'line',\n                data: network,\n                color: \"#F58080\",\n                lineStyle: {\n                    normal: {\n                        width: 2,\n                        color: {\n                            type: 'linear',\n\n                            colorStops: [{\n                                offset: 0,\n                                color: '#FFCAD4' // 0% 处的颜色\n                            }, {\n                                offset: 0.4,\n                                color: '#F58080' // 100% 处的颜色\n                            }, {\n                                offset: 1,\n                                color: '#F58080' // 100% 处的颜色\n                            }],\n                            globalCoord: false // 缺省为 false\n                        },\n                        shadowColor: 'rgba(245,128,128, 0.5)',\n                        shadowBlur: 10,\n                        shadowOffsetY: 7\n                    }\n                },\n                itemStyle: {\n                    normal: {\n                        color: '#F58080',\n                        borderWidth: 3,\n                        /*shadowColor: 'rgba(72,216,191, 0.3)',\n                         shadowBlur: 100,*/\n                        borderColor: \"#F58080\"\n                    }\n                },\n                smooth: true\n            },\n            {\n                name: 'CPU',\n                type: 'line',\n                data: cpu,\n                lineStyle: {\n                    normal: {\n                        width: 2,\n                        color: {\n                            type: 'linear',\n                            colorStops: [{\n                                    offset: 0,\n                                    color: '#AAF487' // 0% 处的颜色\n                                },\n                                {\n                                    offset: 0.4,\n                                    color: '#47D8BE' // 100% 处的颜色\n                                }, {\n                                    offset: 1,\n                                    color: '#47D8BE' // 100% 处的颜色\n                                }\n                            ],\n                            globalCoord: false // 缺省为 false\n                        },\n                        shadowColor: 'rgba(71,216,190, 0.5)',\n                        shadowBlur: 10,\n                        shadowOffsetY: 7\n                    }\n                },\n                itemStyle: {\n                    normal: {\n                        color: '#AAF487',\n                        borderWidth: 3,\n                        /*shadowColor: 'rgba(72,216,191, 0.3)',\n                         shadowBlur: 100,*/\n                        borderColor: \"#AAF487\"\n                    }\n                },\n                smooth: true\n            },\n            {\n                name: 'IO',\n                type: 'line',\n                data: io,\n                lineStyle: {\n                    normal: {\n                        width: 2,\n                        color: {\n                            type: 'linear',\n\n                            colorStops: [{\n                                    offset: 0,\n                                    color: '#F6D06F' // 0% 处的颜色\n                                },\n                                {\n                                    offset: 0.4,\n                                    color: '#F9A589' // 100% 处的颜色\n                                }, {\n                                    offset: 1,\n                                    color: '#F9A589' // 100% 处的颜色\n                                }\n                            ],\n                            globalCoord: false // 缺省为 false\n                        },\n                        shadowColor: 'rgba(249,165,137, 0.5)',\n                        shadowBlur: 10,\n                        shadowOffsetY: 7\n                    }\n                },\n                itemStyle: {\n                    normal: {\n                        color: '#F6D06F',\n                        borderWidth: 3,\n                        /*shadowColor: 'rgba(72,216,191, 0.3)',\n                         shadowBlur: 100,*/\n                        borderColor: \"#F6D06F\"\n                    }\n                },\n                smooth: true\n            }\n        ]\n    };\n    // 异常生成部分图例\n        option.series.push(Object.assign({\n            name: 'straggler',\n            markLine:{\n                silent: false,\n                animation: false,\n                label: {\n                    normal: {\n                        position: 'middle',\n                        fontSize: 12\n                    }\n                },\n                lineStyle: {\n                    normal: {\n                        color: \"#626c91\",\n                        type: 'dotted',\n                        width: 3\n                    },\n                    emphasis: {\n                        color: \"#d9def7\"\n                    }\n                },\n                data:[[\n                    {\n                        symbol: 'none',\n                        name: 'CPU-AG',\n                        coord: [20, 1.0]\n                    },\n                    {\n                        symbol: 'none',\n                        coord: [40, 1.0]\n                    }\n                ],[\n                    {\n                        symbol: 'none',\n                        name: 'IO-AG',\n                        coord: [70, 1.0]\n                    },\n                    {\n                        symbol: 'none',\n                        coord: [90, 1.0]\n                    }\n                ],[\n                    {\n                        symbol: 'none',\n                        name: 'network-AG',\n                        coord: [45, 1.0]\n                    },\n                    {\n                        symbol: 'none',\n                        coord: [55, 1.0]\n                    }\n                ]]\n            }\n        }, COMMONSTYLE));\n    // cpu straggler 显示 图例\n        option.series.push(Object.assign({\n            name: 'c-straggler',\n            markLine:{\n                silent: false,\n                animation: false,\n                label: {\n                    normal: {\n                        position: 'start'\n                    }\n                },\n                lineStyle: {\n                    normal: {\n                        // color: \"#87300e\",\n                        color: \"#626c91\",\n                        type: 'solid',\n                        width: 5\n                    },\n                    emphasis: {\n                        color: \"#d9def7\"\n                    }\n                },\n                data:[[\n                    {\n                        symbol: 'none',\n                        name:'cpu',\n                        coord: [19, 0.5]\n                    },\n                    {\n                        symbol: 'none',\n                        coord: [27, 0.5]\n                    }\n                ],[\n                    {\n                        symbol: 'none',\n                        name:'cpu',\n                        coord: [19, 0.48]\n                    },\n                    {\n                        symbol: 'none',\n                        coord: [26.5, 0.48]\n                    }\n                ],[\n                    {\n                        symbol: 'none',\n                        name:'cpu',\n                        coord: [19, 0.46]\n                    },\n                    {\n                        symbol: 'none',\n                        coord: [26, 0.46]\n                    }\n                ],[\n                    {\n                        symbol: 'none',\n                        name:'cpu',\n                        coord: [85, 0.6]\n                    },\n                    {\n                        symbol: 'none',\n                        coord: [88, 0.6]\n                    }\n                ],[\n                    {\n                        symbol: 'none',\n                        name:'cpu',\n                        coord: [85, 0.58]\n                    },\n                    {\n                        symbol: 'none',\n                        coord: [88, 0.58]\n                    }\n                ]]\n            }\n        }, COMMONSTYLE));\n        option.series.push(Object.assign({\n            name: 'i-straggler',\n            markLine:{\n                silent: false,\n                animation: false,\n                label: {\n                    normal: {\n                        position: 'start'\n                    }\n                },\n                lineStyle: {\n                    normal: {\n                        color: \"#1a2940\",\n                        type: 'solid',\n                        width: 5\n                    },\n                    emphasis: {\n                        color: \"#d9def7\"\n                    }\n                },\n                data:[[\n                    {\n                        symbol: 'none',\n                        name:'io',\n                        coord: [60, 0.25]\n                    },\n                    {\n                        symbol: 'none',\n                        coord: [64, 0.25]\n                    }\n                ],[\n                    {\n                        symbol: 'none',\n                        name:'io',\n                        coord: [60, 0.3]\n                    },\n                    {\n                        symbol: 'none',\n                        coord: [64, 0.3]\n                    }\n                ]]\n            }\n        }, COMMONSTYLE));\n        option.series.push(Object.assign({\n            name: 'n-straggler',\n            markLine:{\n                silent: false,\n                animation: false,\n                label: {\n                    normal: {\n                        position: 'start'\n                    }\n                },\n                lineStyle: {\n                    normal: {\n                        color: \"#333333\",\n                        type: 'solid',\n                        width: 5\n                    },\n                    emphasis: {\n                        color: \"#d9def7\"\n                    }\n                },\n                data:[[\n                    {\n                        symbol: 'none',\n                        name:'network',\n                        coord: [40, 0.3]\n                    },\n                    {\n                        symbol: 'none',\n                        coord: [44, 0.3]\n                    }\n                ]]\n            }\n        }, COMMONSTYLE));\n        return option;\n    },\n    getSlaveOption: function (cpu, io, network, time, max_scala, tasks) {\n        let COMMONSTYLE = {\n            type: 'line',\n            silent: true,\n            animation: false,\n            symbolSize: 0,\n            hoverAnimation: false,\n            lineStyle: {\n                normal: {\n                    width: 3\n                }\n            }\n        };\n        let option = {\n            tooltip: {\n                trigger: 'axis'\n            },\n            legend: {\n                color: [\"#F58080\", \"#47D8BE\", \"#F9A589\"],\n                data: ['NetWork', 'CPU', 'IO'],\n                left: 'center',\n                // bottom: 'bottom'\n                top: 'top'\n            },\n            grid: {\n                top: 'middle',\n                left: '3%',\n                right: '4%',\n                bottom: '3%',\n                height: '80%',\n                containLabel: true\n            },\n            xAxis: {\n                type: 'category',\n                data: [...Array(time).keys()],\n                axisLine: {\n                    lineStyle: {\n                        color: \"#999\"\n                    }\n                }\n            },\n            yAxis: [{\n                type: 'value',\n                name: 'feature scale',\n                splitLine: {\n                    lineStyle: {\n                        type: 'dashed',\n                        color: '#DDD'\n                    }\n                },\n                axisLine: {\n                    show: false,\n                    lineStyle: {\n                        color: \"#333\"\n                    },\n                },\n                nameTextStyle: {\n                    color: \"#999\"\n                },\n                splitArea: {\n                    show: false\n                }\n            },{\n                type: 'value',\n                name: 'straggler scala',\n                min: 0,\n                max: Math.ceil(max_scala),\n                splitLine: {\n                    lineStyle: {\n                        type: 'dashed',\n                        color: '#DDD'\n                    }\n                },\n                axisLine: {\n                    show: false,\n                    lineStyle: {\n                        color: \"#333\"\n                    },\n                },\n                nameTextStyle: {\n                    color: \"#999\"\n                },\n                splitArea: {\n                    show: false\n                }\n            }],\n        series: [{\n                name: 'NetWork',\n                type: 'line',\n                data: network,\n                color: \"#F58080\",\n                lineStyle: {\n                    normal: {\n                        width: 2,\n                        color: {\n                            type: 'linear',\n\n                            colorStops: [{\n                                offset: 0,\n                                color: '#FFCAD4' // 0% 处的颜色\n                            }, {\n                                offset: 0.4,\n                                color: '#F58080' // 100% 处的颜色\n                            }, {\n                                offset: 1,\n                                color: '#F58080' // 100% 处的颜色\n                            }],\n                            globalCoord: false // 缺省为 false\n                        },\n                        shadowColor: 'rgba(245,128,128, 0.5)',\n                        shadowBlur: 10,\n                        shadowOffsetY: 7\n                    }\n                },\n                itemStyle: {\n                    normal: {\n                        color: '#F58080',\n                        borderWidth: 3,\n                        /*shadowColor: 'rgba(72,216,191, 0.3)',\n                         shadowBlur: 100,*/\n                        borderColor: \"#F58080\"\n                    }\n                },\n                smooth: true\n            },\n            {\n                name: 'CPU',\n                type: 'line',\n                data: cpu,\n                lineStyle: {\n                    normal: {\n                        width: 2,\n                        color: {\n                            type: 'linear',\n                            colorStops: [{\n                                    offset: 0,\n                                    color: '#AAF487' // 0% 处的颜色\n                                },\n                                {\n                                    offset: 0.4,\n                                    color: '#47D8BE' // 100% 处的颜色\n                                }, {\n                                    offset: 1,\n                                    color: '#47D8BE' // 100% 处的颜色\n                                }\n                            ],\n                            globalCoord: false // 缺省为 false\n                        },\n                        shadowColor: 'rgba(71,216,190, 0.5)',\n                        shadowBlur: 10,\n                        shadowOffsetY: 7\n                    }\n                },\n                itemStyle: {\n                    normal: {\n                        color: '#AAF487',\n                        borderWidth: 3,\n                        /*shadowColor: 'rgba(72,216,191, 0.3)',\n                         shadowBlur: 100,*/\n                        borderColor: \"#AAF487\"\n                    }\n                },\n                smooth: true\n            },\n            {\n                name: 'IO',\n                type: 'line',\n                data: io,\n                lineStyle: {\n                    normal: {\n                        width: 2,\n                        color: {\n                            type: 'linear',\n\n                            colorStops: [{\n                                    offset: 0,\n                                    color: '#F6D06F' // 0% 处的颜色\n                                },\n                                {\n                                    offset: 0.4,\n                                    color: '#F9A589' // 100% 处的颜色\n                                }, {\n                                    offset: 1,\n                                    color: '#F9A589' // 100% 处的颜色\n                                }\n                            ],\n                            globalCoord: false // 缺省为 false\n                        },\n                        shadowColor: 'rgba(249,165,137, 0.5)',\n                        shadowBlur: 10,\n                        shadowOffsetY: 7\n                    }\n                },\n                itemStyle: {\n                    normal: {\n                        color: '#F6D06F',\n                        borderWidth: 3,\n                        /*shadowColor: 'rgba(72,216,191, 0.3)',\n                         shadowBlur: 100,*/\n                        borderColor: \"#F6D06F\"\n                    }\n                },\n                smooth: true\n            }\n        ],\n        dataZoom: [\n            { type: 'slider', show: true, xAxisIndex: 0, start: 0, end: 100 },\n            { type: 'inside', xAxisIndex: 0, start: 0, end: 100 },\n        ],\n    };\n\n    // cpu straggler 显示 图例\n        option.series.push(Object.assign({\n            name: 'c-straggler',\n            markLine:{\n                silent: false,\n                animation: false,\n                label: {\n                    normal: {\n                        position: 'start'\n                    }\n                },\n                lineStyle: {\n                    normal: {\n                        // color: \"#87300e\",\n                        color: \"#626c91\",\n                        type: 'solid',\n                        width: 5\n                    },\n                    emphasis: {\n                        color: \"#d9def7\"\n                    }\n                },\n                data: tasks\n            }\n        }, COMMONSTYLE));\n        return option;\n    },\n    getPieOption: function (label, pie_data) {\n        let option = {\n            tooltip : {\n                trigger: 'item',\n                formatter: \"{a} <br/>{b} : {c} ({d}%)\"\n            },\n            legend: {\n                orient: 'vertical',\n                left: 'left',\n                data: label\n            },\n            series : [\n                {\n                    name: '原因',\n                    type: 'pie',\n                    radius : '55%',\n                    center: ['50%', '60%'],\n                    data: pie_data,\n                    label:{\n                        show:true,\n                        formatter:'{b}: {d}%'\n                    },\n                    itemStyle: {\n                        emphasis: {\n                            shadowBlur: 10,\n                            shadowOffsetX: 0,\n                            shadowColor: 'rgba(0, 0, 0, 0.5)'\n                        }\n                    }\n                }\n            ]\n        };\n        return option\n    }\n}","<template>\n    <d2-container>\n        <template slot=\"header\">\n            BigRoot 分析报告\n        </template>\n        <div v-if=\"slaves\" v-for=\"(slave, index) in slaves\" :key=\"index\">\n            <el-row :gutter=\"20\">\n                <el-col :span=\"16\" >\n                    <el-card>\n                        <div slot=\"header\"><strong>{{slave.host}}</strong> Straggler分析</div>\n                        <div style=\"height: 400px;\" :id=\"'slave'+(index+1)\">\n                        </div>\n                    </el-card>\n                </el-col>\n                <el-col :span=\"8\">\n                    <el-tabs type=\"border-card\">\n                        <el-tab-pane :label=\"slave.host + '-straggler种类统计'\">\n                            <div :id=\"'pie'+(index+1)\" style=\"height: 428px\">\n                            </div>\n                        </el-tab-pane>\n                        <el-tab-pane :label=\"slave.host + '-straggler信息'\">\n                            <el-table :data=\"slave.table\" border style=\"width: 100%\" height=\"428\" >\n                                <el-table-column type=\"index\"></el-table-column>\n                                <el-table-column prop=\"start\" label=\"time-start(s)\"></el-table-column>\n                                <el-table-column prop=\"end\" label=\"time-end(s)\"></el-table-column>\n                                <el-table-column prop=\"factor\" label=\"straggler-scala\"></el-table-column>\n                                <el-table-column prop=\"root-cause\" label=\"root-cause\"></el-table-column>\n                            </el-table>\n                        </el-tab-pane>\n                    </el-tabs>\n                </el-col>\n            </el-row>\n            <br>\n        </div>\n    </d2-container>\n</template>\n\n<script>\n    import echarts from \"echarts\"\n    import config from \"@/config/bigroot/index\"\n    import {getBigRootStraggler} from '@/api/bigroot/index'\n    export default {\n        name: \"index\",\n        data(){\n          return{\n           slaves: null\n          }\n        },\n        mounted() {\n            let task_name = this.$store.state.bigroot.currentTaskName;\n            if (task_name === '') {\n                this.$router.push({name: 'history'});\n                this.$notify({\n                    title: '注意',\n                    message: '请选择或创建task',\n                    type: 'warning'\n                });\n            } else {\n                getBigRootStraggler({name: task_name}).then(res=>{\n                    this.slaves = res.data;\n                    this.$nextTick(()=>{\n                        this.renderSlaves(this.slaves)\n                    })\n                })\n            }\n\n        },\n        methods:{\n            renderSlaves(sdata){\n                for (let i = 1; i <= sdata.length; i++){\n                    let data = sdata[i-1];\n                    let root = echarts.init(document.getElementById('slave'+i));\n                    let option = config.getSlaveOption(data.cpu, data.io, data.net, data.time, data.scala, data.tasks);\n                    root.setOption(option);\n\n                    let pie = echarts.init(document.getElementById('pie'+i));\n                    pie.setOption(config.getPieOption(data.label, data.pie_data));\n                }\n            }\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=7a4585c2&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7a4585c2\",\n  null\n  \n)\n\ncomponent.options.__file = \"index.vue\"\nexport default component.exports","import request from \"@/plugin/axios\"\n\nexport function getBigRootStraggler(data){\n    return request({\n        url: '/bigroot/getstraggler',\n        method: 'GET',\n        params: data\n    })\n}\n\nexport function getbTaskList(data) {\n    return request({\n        url: \"/bigroot/gettasklist\",\n        method: 'GET',\n        params: data\n    })\n}\n\nexport function deleteBigRootTask(data) {\n    return request({\n        url: \"/bigroot/delete\",\n        method: 'GET',\n        params: data\n    })\n}"],"sourceRoot":""}